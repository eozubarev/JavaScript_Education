// Опциональная цепочка '?.'
// https://learn.javascript.ru/optional-chaining

// Опциональная цепочка ?. — это безопасный способ доступа к свойствам вложенных объектов,
// даже если какое-либо из промежуточных свойств не существует.

const userInfo = {
    name: 'Andrey',
    age: 25,
    anyway: undefined,
    address: {
        city: 'Moscow',
        street: 'Pushkina',
        internetProvider: {
            name: 'RosTelekom',
            tel: '+79999999',
            email: 'ros@mail.ru'
        }
    }
}

// Опциональная цепочка ?. останавливает вычисление и
// возвращает undefined, если значение перед ?. равно undefined или null.
console.log(userInfo?.address?.fax) // undefined (без ошибки)
console.log(userInfo?.address?.internetProvider?.tel) // '+79999999',



// ?. немедленно останавливает вычисление, если левая часть не существует.
// Так что если после ?. есть какие-то вызовы функций или операции, то они не произойдут.

let user = null;
let x = 0;

user?.sayHi(x++); // нет "user", поэтому выполнение не достигает вызова sayHi и x++

alert(x); // 0, значение не увеличилось




// Другие варианты применения: ?.(), ?.[]
// Опциональная цепочка ?. — это не оператор, а специальная синтаксическая конструкция, которая также
// работает с функциями и квадратными скобками.
let userAdmin = {
    admin() {
        alert("Я админ");
    }
};
let userGuest = {};
userAdmin.admin?.(); // Я админ
userGuest.admin?.(); // ничего не произойдет (такого метода нет)



// Тем не менее, мы должны использовать ?. осторожно, только там, где по логике кода допустимо, что левая часть не существует.
// Чтобы он не скрывал от нас ошибки программирования, если они возникнут.